@mixin include-select-colors($colors-map) {
    @if map-has-key($colors-map, border-color) and map-get($colors-map, border-color) {
        border-color: map-get($colors-map, border-color);
    }
    @if map-has-key($colors-map, background) and map-get($colors-map, background) {
        background: map-get($colors-map, background);
    }
    @if map-has-key($colors-map, color) and map-get($colors-map, color) {
        color: map-get($colors-map, color);
    }

    &:focus {
        @if map-has-key($colors-map, focus-border-color) and map-get($colors-map, focus-border-color) {
            border-color: map-get($colors-map, focus-border-color);
        }
        @if map-has-key($colors-map, focus-background) and map-get($colors-map, focus-background) {
            background: map-get($colors-map, focus-background);
        }
        @if map-has-key($colors-map, focus-color) and map-get($colors-map, focus-color) {
            color: map-get($colors-map, focus-color);
        }
    }
}

@mixin select-colors($colors-map) {
    select {
        @include include-select-colors($colors-map);
    }
}

@mixin class-select-colors($class, $colors-map) {
    select.#{$class} {
        @include include-select-colors($colors-map);
    }
}

//Arrow
@mixin include-select-arrow-color-rgb($colors-map) {
    @if map-has-key($colors-map, color-rgb) and map-get($colors-map, color-rgb) {
        $rgb: map-get($colors-map, color-rgb);
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='24' viewBox='0 0 32 24'><polygon points='0,0 32,0 16,24' style='fill: rgb%28#{$rgb}%29'></polygon></svg>");
    }

    @if map-has-key($colors-map, focus-color-rgb) and map-get($colors-map, focus-color-rgb) {
        &:focus {
            $rgb: map-get($colors-map, focus-color-rgb);
            background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='24' viewBox='0 0 32 24'><polygon points='0,0 32,0 16,24' style='fill: rgb%28#{$rgb}%29'></polygon></svg>");
        }
    }

}
@mixin select-arrow-color-rgb($colors-map) {
    select {
        @include include-select-arrow-color-rgb($colors-map);
    }
}

@mixin class-select-arrow-color-rgb($class, $colors-map) {
    select.#{$class} {
        @include include-select-arrow-color-rgb($colors-map);
    }
}

//Multiple
@mixin select-multiple-option-checked-style() {
    select[multiple] option:checked {
        @content;
    }
}

@mixin class-select-multiple-option-checked-style($class) {
    select.#{$class}[multiple] option:checked {
        @content;
    }
}

@mixin include-select-multiple-option-checked-colors($colors-map) {
    @if map-has-key($colors-map, background) and map-get($colors-map, background) {
        $background: map-get($colors-map, background);
        background: $background -webkit-linear-gradient(0deg, $background 0%, $background 100%);
        background: $background -mz-linear-gradient(0deg, $background 0%, $background 100%);
        background: $background -ms-linear-gradient(0deg, $background 0%, $background 100%);
        background: $background -o-linear-gradient(0deg, $background 0%, $background 100%);
        background: $background linear-gradient(0deg, $background 0%, $background 100%);
    }
    @if map-has-key($colors-map, color) and map-get($colors-map, color) {
        color: map-get($colors-map, color);
    }
}

@mixin select-multiple-option-checked-background($colors-map) {
    @include select-multiple-option-checked-style() {
        @include include-select-multiple-option-checked-colors($colors-map);
    }
}

@mixin class-select-multiple-option-checked-background($class, $colors-map) {
    @include class-select-multiple-option-checked-style($class) {
        @include include-select-multiple-option-checked-colors($colors-map);
    }
}

//Multiple Focus
@mixin select-focus-multiple-option-checked-style() {
    select[multiple]:focus option:checked {
        @content;
    }
}

@mixin class-select-focus-multiple-option-checked-style($class) {
    select.#{$class}[multiple]:focus option:checked {
        @content;
    }
}

@mixin select-focus-multiple-option-checked-background($colors-map) {
    @include select-focus-multiple-option-checked-style {
        @include include-select-multiple-option-checked-colors($colors-map);
    }
}

@mixin class-select-focus-multiple-option-checked-background($class, $colors-map) {
    @include class-select-focus-multiple-option-checked-style($class) {
        @include include-select-multiple-option-checked-colors($colors-map);
    }
}
