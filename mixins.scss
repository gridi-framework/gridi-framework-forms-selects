//Colors
//Text inputs
//@mixin select-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin select-focus-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin select-disabled-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin select-multiple-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin select-focus-multiple-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin select-multiple-option-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin select-focus-multiple-option-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin select-multiple-option-checked-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin select-focus-multiple-option-checked-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element

@mixin select-colors-propertys($colors-map) {
    @if is-map($colors-map) {
        @include property-from-map($colors-map, outline-color);
        @include property-from-map($colors-map, border-color);
        @include property-from-map($colors-map, background-color);
        @if map-has-key($colors-map, arrow-color) {
            @include select-arrow-color(map-get($colors-map, arrow-color));
        }
        @include property-from-map($colors-map, color);
        @if mixin-exists(select-extra-colors-propertys) {
            @include select-extra-colors-propertys($colors-map);
        }

        &:focus {
            @include property-from-map($colors-map, outline-color, focus-outline-color);
            @include property-from-map($colors-map, border-color, focus-border-color);
            @include property-from-map($colors-map, background-color, focus-background-color);
            @include property-from-map($colors-map, color, focus-color);
            @if mixin-exists(select-focus-extra-colors-propertys) {
                @include select-focus-extra-colors-propertys($colors-map);
            }
        }

        &[disabled] {
            @include property-from-map($colors-map, border-color, disabled-border-color);
            @include property-from-map($colors-map, background-color, disabled-background-color);
            @if map-has-key($colors-map, disabled-arrow-color) {
                @include select-arrow-color(map-get($colors-map, disabled-arrow-color));
            }
            @include property-from-map($colors-map, color, disabled-color);
            @if mixin-exists(select-disabled-extra-colors-propertys) {
                @include select-disabled-extra-colors-propertys($colors-map);
            }
        }

        &[multiple] {
            @include property-from-map($colors-map, background-color, multiple-background-color);
            @if mixin-exists(select-multiple-extra-colors-propertys) {
                @include select-multiple-extra-colors-propertys($colors-map);
            }

            option {
                @if mixin-exists(select-multiple-option-extra-colors-propertys) {
                    @include select-multiple-option-extra-colors-propertys($colors-map);
                }

                &:checked {
                    @if map-has-key($colors-map, multiple-option-checked-background-color) {
                        @include select-multiple-option-checked-background-color(map-get($colors-map, multiple-option-checked-background-color));
                    }
                    @include property-from-map($colors-map, color, multiple-option-checked-color);
                    @if mixin-exists(select-multiple-option-checked-extra-colors-propertys) {
                        @include select-multiple-option-checked-extra-colors-propertys($colors-map);
                    }
                }
            }

            &:focus {
                @if mixin-exists(select-focus-multiple-extra-colors-propertys) {
                    @include select-focus-multiple-extra-colors-propertys($colors-map);
                }

                option {
                    @if mixin-exists(select-focus-multiple-option-extra-colors-propertys) {
                        @include select-focus-multiple-option-extra-colors-propertys($colors-map);
                    }

                    &:checked {
                        @if map-has-key($colors-map, focus-multiple-option-checked-background-color) {
                            @include select-multiple-option-checked-background-color(map-get($colors-map, focus-multiple-option-checked-background-color));
                        }
                        @include property-from-map($colors-map, color, focus-multiple-option-checked-color);
                        @if mixin-exists(select-focus-multiple-option-checked-extra-colors-propertys) {
                            @include select-focus-multiple-option-checked-extra-colors-propertys($colors-map);
                        }
                    }
                }
            }
        }
    }
}

@mixin select-colors($colors-map) {
    select {
        @include select-colors-propertys($colors-map);
    }
}

@mixin class-select-colors($class, $colors-map) {
    select.#{$class} {
        @include select-colors-propertys($colors-map);
    }
}

@mixin select-arrow-color($color) {
    @if $color {
        background-image: url(get-select-arrow-down-svg($color));
    }
}

@mixin select-multiple-option-checked-background-color($background-color) {
    @if $select-multiple-option-checked-background-color-css3-use-prefixes {
        @if index($select-multiple-option-checked-background-color-browsers-prefixes, webkit) {
            background: $background-color -webkit-linear-gradient(0deg, $background-color 0%, $background-color 100%);
        }
        @if index($select-multiple-option-checked-background-color-browsers-prefixes, moz) {
            background: $background-color -moz-linear-gradient(0deg, $background-color 0%, $background-color 100%);
        }
        @if index($select-multiple-option-checked-background-color-browsers-prefixes, ms) {
            background: $background-color -ms-linear-gradient(0deg, $background-color 0%, $background-color 100%);
        }
        @if index($select-multiple-option-checked-background-color-browsers-prefixes, o) {
            background: $background-color -o-linear-gradient(0deg, $background-color 0%, $background-color 100%);
        }
    }
    background: $background-color linear-gradient(0deg, $background-color 0%, $background-color 100%);
}